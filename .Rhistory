shiny::runApp('D:/Work/Test shinny/covid19_dashboard-master')
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
valueBox(
key_figures()$countries,
subtitle = "Quốc gia nhiễm bệnh",
icon     = icon("flag"),
color    = "aqua"
)
runApp()
valueBox(
key_figures()$countries,
subtitle = "Quốc gia nhiễm bệnh",
icon     = icon("flag"),
color    = "aqua"
)
valueBox(
key_figures()$deceased,
subtitle = "Tử vong",
icon     = icon("tombstone-blank"),
color    = "red"
)
valueBox(
key_figures()$countries,
subtitle = "Quốc gia nhiễm bệnh",
icon     = icon("flag"),
color    = "aqua"
)
runApp()
output$summaryTables <- renderUI({
tabBox(
tabPanel("Country/Region",
div(
dataTableOutput("summaryDT_country"),
style = "margin-top: -10px")
),
tabPanel("Province/State",
div(
dataTableOutput("summaryDT_state"),
style = "margin-top: -10px"
)
),
width = 12
)
})
runApp()
print(Sys.getlocale())
print(devtools::session_info())
print(Sys.getenv())
dbGetQuery(db$con,'SET NAMES utf8')
runApp()
runApp()
runApp()
source("sections/content_overview/KeyFigures.R", encoding = "UTF-8", echo = TRUE)
source("sections/content_overview/KeyFigures.R", encoding = "UTF-8", echo = TRUE)
source("sections/content_overview/KeyFigures.R", encoding = "UTF-8", echo = TRUE)
source("sections/content_overview/KeyFigures.R", encoding = "UTF-8", echo = TRUE)
source("sections/content_overview/KeyFigures.R", encoding = "UTF-8")
print(Sys.getenv())
print(Sys.getlocale())
Sys.setlocale(category =  "LC_ALL", locale = "Vietnam")
Sys.setlocale(category =  "LC_ALL", locale = "Germany")
Sys.setlocale("LC_TIME", "C")
Sys.setlocale("LC_TIME", "Vietnam")
print(Sys.getlocale())
runApp()
runApp()
key_figures <- reactive({
data           <- sumData(input$timeSlider)
data_yesterday <- sumData(input$timeSlider - 1)
data_new <- list(
new_confirmed = (data$confirmed - data_yesterday$confirmed) / data_yesterday$confirmed * 100,
new_recovered = (data$recovered - data_yesterday$recovered) / data_yesterday$recovered * 100,
new_deceased  = (data$deceased - data_yesterday$deceased) / data_yesterday$deceased * 100,
new_countries = data$countries - data_yesterday$countries
)
keyFigures <- list(
"confirmed" = HTML(paste(format(data$confirmed, big.mark = " "), sprintf("<h4>(%+.1f %%)</h4>", data_new$new_confirmed))),
"recovered" = HTML(paste(format(data$recovered, big.mark = " "), sprintf("<h4>(%+.1f %%)</h4>", data_new$new_recovered))),
"deceased"  = HTML(paste(format(data$deceased, big.mark = " "), sprintf("<h4>(%+.1f %%)</h4>", data_new$new_deceased))),
"countries" = HTML(paste(format(data$countries, big.mark = " "), "/ 195", sprintf("<h4>(%+d)</h4>", data_new$new_countries)))
)
return(keyFigures)
})
runApp()
runApp()
source('sections/content_overview/KeyFigures.R', encoding = 'UTF-8')
install.packages("crypto")
install.packages("crypto2")
library("crypto2")
library("crypto2")
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
devtools::install_github("jessevent/crypto")
install.packages("devtools")
devtools::install_github("jessevent/crypto")
devtools::install_github("jessevent/crypto")
devtools::install_github("jessevent/crypto")
install.packages("devtools")
options("install.lock"=FALSE)
install.packages("devtools")
devtools::install_github("jessevent/crypto")
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
install.packages("crypto")
library("crypto")
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
sessionInfo()
Sys.setlocale("LC_ALL", "en_US.UTF-8")
library("crypto")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
library("crypto")
Sys.setlocale("LC_ALL", "Vietnam")
shiny::runApp()
data_confirmed    <- read_csv("data/time_series_covid19_confirmed_global.csv")
data_deceased     <- read_csv("data/time_series_covid19_deaths_global.csv")
data_recovered    <- read_csv("data/time_series_covid19_recovered_global.csv")
data_confirmed_us <- read_csv("data/time_series_covid19_confirmed_US.csv")
data_deceased_us  <- read_csv("data/time_series_covid19_deaths_US.csv")
# ---- Loading libraries ----
library("shiny")
library("shinydashboard")
library("tidyverse")
library("leaflet")
library("plotly")
library("DT")
library("fs")
library("wbstats")
source("utils.R", local = T)
downloadGithubData <- function() {
download.file(
url      = "https://github.com/CSSEGISandData/COVID-19/archive/master.zip",
destfile = "data/covid19_data.zip"
)
data_path <- "COVID-19-master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_"
unzip(
zipfile   = "data/covid19_data.zip",
files     = paste0(data_path, c("confirmed_global.csv", "deaths_global.csv", "recovered_global.csv", "confirmed_US.csv", "deaths_US.csv")),
exdir     = "data",
junkpaths = T
)
}
updateData <- function() {
# Download data from Johns Hopkins (https://github.com/CSSEGISandData/COVID-19) if the data is older than 0.5h
if (!dir_exists("data")) {
dir.create('data')
downloadGithubData()
}
#else if ((!file.exists("data/covid19_data.zip")) || (as.double(Sys.time() - file_info("data/covid19_data.zip")$change_time, units = "hours") > 0.5)) {
#downloadGithubData()
#}
}
# Update with start of app
updateData()
# TODO: Still throws a warning but works for now
data_confirmed    <- read_csv("data/time_series_covid19_confirmed_global.csv")
data_deceased     <- read_csv("data/time_series_covid19_deaths_global.csv")
data_recovered    <- read_csv("data/time_series_covid19_recovered_global.csv")
data_confirmed_us <- read_csv("data/time_series_covid19_confirmed_US.csv")
data_deceased_us  <- read_csv("data/time_series_covid19_deaths_US.csv")
View(data_confirmed_us)
View(data_deceased_us)
shiny::runApp()
shiny::runApp()
